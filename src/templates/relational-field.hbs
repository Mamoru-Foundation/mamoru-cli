{{#ifeq relationType "one-to-one"}}
    set {{name}}(entity: {{{valueType}}}) {
        let fieldValue = this.__XXX_value.get('{{name}}');

        if (fieldValue instanceof UInt64Value) {
            (fieldValue as UInt64Value).value = entity.__XXX__id();
        } else {
            throw new Error("Invalid value");
        }
    }

    get {{name}}(): {{{valueType}}} {
        let value = this.__XXX_value.get('{{name}}');

        if (value instanceof UInt64Value) {
            return _XXX_getEntity<{{{valueType}}}>('{{relationEntity}}', value);
        } else {
            throw new Error("Invalid value");
        }
    }

{{/ifeq}}
{{#ifeq relationType "one-to-many"}}
    add{{capitalizeFieldName name }}(entity: {{{relationEntity}}}Entity): void {
        let fieldValue = this.__XXX_value.get('{{name}}');

        if (fieldValue instanceof ListValue) {
            let entityId = new UInt64Value(false);
            (entityId as UInt64Value).value = entity.__XXX__id();

            (fieldValue as ListValue<UInt64Value>).value.push(entityId);
        } else {
            throw new Error("Invalid value");
        }
    }

    get {{name}}(): {{{nativeType}}} {
        let fieldValue = this.__XXX_value.get('{{name}}');

        if (fieldValue instanceof ListValue) {
            let array: {{{nativeType}}} = [];

            for (let i = 0; i < (fieldValue as ListValue<UInt64Value>).value.length; i++) {
                array.push(_XXX_getEntity<{{{relationEntity}}}Entity>('{{{relationEntity}}}', (fieldValue as ListValue<UInt64Value>).value[i].value));
            }

            return array;
        } else {
            throw new Error("Invalid value");
        }
    }

{{/ifeq}}
{{#ifeq relationType "many-to-one"}}
    set {{name}}(entity: {{{valueType}}}) {
        let fieldValue = this.__XXX_value.get('{{relationEntity}}');

        if (fieldValue instanceof UInt64Value) {
            (fieldValue as UInt64Value).value = entity.__XXX__id();
        } else {
            throw new Error("Invalid value");
        }
    }

    get {{name}}(): {{{valueType}}} {
        let value = this.__XXX_value.get('{{relationEntity}}');

        if (value instanceof UInt64Value) {
            return _XXX_getEntity<{{{valueType}}}>('{{relationEntity}}', (value as UInt64Value).value);
        } else {
            throw new Error("Invalid value");
        }
    }

{{/ifeq}}
{{#ifeq relationType "many-to-many"}}
    add{{capitalizeFieldName name }}(entity: {{{relationEntity}}}Entity): void {
        let fieldValue = this.__XXX_value.get('{{name}}');

        if (fieldValue instanceof ListValue) {
            let entityId = new UInt64Value(false);
            (entityId as UInt64Value).value = entity.__XXX__id();

            (fieldValue as ListValue<UInt64Value>).value.push(entityId);
        } else {
            throw new Error("Invalid value");
        }
    }

    get {{name}}(): {{{nativeType}}} {
        let fieldValue = this.__XXX_value.get('{{name}}');

        if (fieldValue instanceof ListValue) {
            let array: {{{nativeType}}} = [];

            for (let i = 0; i < fieldValue.value.length; i++) {
                array.push(_XXX_getEntity<{{{relationEntity}}}Entity>('{{{relationEntity}}}', (fieldValue as ListValue<UInt64Value>).value[i].value));
            }

            return array;
        } else {
            throw new Error("Invalid value");
        }
    }

{{/ifeq}}
